{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction PaginationComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_5_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const page_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onPage(page_r1);\n    });\n    i0.ɵɵelementStart(1, \"button\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const page_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", page_r1 === ctx_r0.currentPage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(page_r1);\n  }\n}\n\nexport let PaginationComponent = /*#__PURE__*/(() => {\n  class PaginationComponent {\n    constructor() {\n      this.prev = new EventEmitter();\n      this.next = new EventEmitter();\n      this.goPage = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onPage(n) {\n      this.goPage.emit(n);\n      console.log(this.getPages());\n    }\n\n    isOnLastPage() {\n      // console.log(this.perPage * this.currentPage, this.totalItemsCount);\n      return this.perPage * this.currentPage >= this.totalItemsCount;\n    }\n\n    totalPages() {\n      return Math.ceil(this.totalItemsCount / this.perPage) || 0;\n    }\n\n    getMin() {\n      return this.perPage * this.currentPage - this.perPage + 1;\n    }\n\n    getMax() {\n      let max = this.perPage * this.currentPage;\n\n      if (max > this.totalItemsCount) {\n        max = this.totalItemsCount;\n      }\n\n      return max;\n    }\n\n    onPrev() {\n      this.prev.emit(true);\n    }\n\n    onNext() {\n      this.next.emit(true);\n    }\n\n    getPages() {\n      const c = Math.ceil(this.totalItemsCount / this.perPage);\n      const p = this.currentPage || 1;\n      const pagesToShow = this.pagesToShow || 9;\n      const pages = [];\n      pages.push(p);\n      const times = pagesToShow - 1;\n\n      for (let i = 0; i < times; i++) {\n        if (pages.length < pagesToShow) {\n          if (Math.min.apply(null, pages) > 1) {\n            pages.push(Math.min.apply(null, pages) - 1);\n          }\n        }\n\n        if (pages.length < pagesToShow) {\n          if (Math.max.apply(null, pages) < c) {\n            pages.push(Math.max.apply(null, pages) + 1);\n          }\n        }\n      }\n\n      pages.sort((a, b) => a - b);\n      return pages;\n    }\n\n  }\n\n  PaginationComponent.ɵfac = function PaginationComponent_Factory(t) {\n    return new (t || PaginationComponent)();\n  };\n\n  PaginationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaginationComponent,\n    selectors: [[\"app-pagination\"]],\n    inputs: {\n      currentPage: \"currentPage\",\n      totalItemsCount: \"totalItemsCount\",\n      perPage: \"perPage\",\n      pagesToShow: \"pagesToShow\"\n    },\n    outputs: {\n      prev: \"prev\",\n      next: \"next\",\n      goPage: \"goPage\"\n    },\n    decls: 9,\n    vars: 3,\n    consts: [[\"aria-label\", \"...\"], [1, \"pagination\"], [1, \"page-item\", \"disabled\", 3, \"click\"], [\"tabindex\", \"-1\", 1, \"page-link\", 3, \"disabled\"], [\"class\", \"page-item\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"page-item\", 3, \"click\"], [1, \"page-link\", 3, \"disabled\"], [1, \"page-link\"]],\n    template: function PaginationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ul\", 1)(2, \"li\", 2);\n        i0.ɵɵlistener(\"click\", function PaginationComponent_Template_li_click_2_listener() {\n          return ctx.onPrev();\n        });\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵtext(4, \"Previous\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, PaginationComponent_li_5_Template, 3, 3, \"li\", 4);\n        i0.ɵɵelementStart(6, \"li\", 5);\n        i0.ɵɵlistener(\"click\", function PaginationComponent_Template_li_click_6_listener() {\n          return ctx.onNext();\n        });\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵtext(8, \"Next\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.currentPage !== 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getPages());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.isOnLastPage());\n      }\n    },\n    directives: [i1.NgForOf],\n    styles: [\"\"]\n  });\n  return PaginationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}